# This source file defines the microcode for the 74xx Computer.
# The file is to be compiled with mcc.exe which results in a binary that is then uploaded to the microcode ROM.
#
# File layout:
# - The first part (header) of the file defines all the mnemonics, opcodes and control lines.
# - The second part (code) of the file defines the microcode.
#
# Header syntax:
# ---------------
#
# INSTRUCTIONS
# {
# 	<MNEMONIC>(<LENGTH>):<OPCODE>;<MNEMONIC>(<LENGTH>):<OPCODE>;<MNEMONIC>(<LENGTH>):<OPCODE>
#   length = number of bytes used by instruction (e.g. MOV A B has no operands and is just 1 byte, JMP 0x1 0x2 has two operands and uses 3 bytes)
# }
# 
# CONTROLLINES
# {
# 	<CONTROLLINE_NAME>;<CONTROLLINE_NAME> 
#	(repeat for all 48 control lines in correct bit order)
# }
#
# - Opcode is a binary value (LSBF)
# - Newlines and additional spaces around the ; are ignored
# - Control line name is "NC" for unused lines
# - T-states 0 & 1 (instruction fetch) are hard-wired and do not need to be defined in microcode
#
# Code syntax:
#----------------
#
# MICROCODE
# {
# 	<MNEMONIC>
# 	{
# 		<T-STATE>
#		{
#			[flags_state] CONTROLLINE_NAME;CONTROLLINE_NAME
#		}
# 	}
# 	<MNEMONIC> (r1) (r2)
# 	{
# 		<T-STATE>
#		{
#			[flags_state] CONTROLLINE_NAME_(r1);CONTROLLINE_NAME_(r2)
#		}
# 	}
# }
#
# - Flags state is a binary value and ordered as such: Fcmp, Fz, Fc.
# - Use 'x' in flag state to act on any state of that bit.
# - If flags state is irrelevant (xxx) it may be ommited.
#   So "0 { TSTATE_reset }" would be a valid t-state definition.
# - (r1) and (r2) may be used to indicate registers.
#   The compiler will automatically try to compile the instruction against all registers, 
#   as long as the instruction (e.g. MOV B D) exists in the instructions list
#

INSTRUCTIONS
{
	NOP(1):00000000;
	HALT(1):00000001;
	MOV B A(1):00000010;
	MOV C A(1):00000011;
	MOV D A(1):00000100;
	MOV A B(1):00000101;
	MOV C B(1):00000110;
	MOV D B(1):00000111;
	MOV A C(1):00001000;
	MOV B C(1):00001001;
	MOV D C(1):00001010;
	MOV A D(1):00001011;
	MOV B D(1):00001100;
	MOV C D(1):00001101;
	MVI A(2):00001110;
	MVI B(2):00001111;
	MVI C(2):00010000;
	MVI D(2):00010001;
	LD A(3):00010010;
	LD B(3):00010011;
	ST A(3):00010110;
	ST B(3):00010111;
	ADD A(1):00011010;
	ADD B(1):01100001;
	ADD C(1):00011011;
	ADD D(1):00011100;
	ADC A(1):00011101;
	ADC B(1):01100010;
	ADC C(1):00011110;
	ADC D(1):00011111;
	SUB A(1):00100000;
	SUB B(1):01100011;
	SUB C(1):00100001;
	SUB D(1):00100010;
	SBC A(1):00100011;
	SBC B(1):01100100;
	SBC C(1):00100100;
	SBC D(1):00100101;
	AND A(1):00100110;
	AND B(1):01100101;
	AND C(1):00100111;
	AND D(1):00101000;
	OR A(1):00101001;
	OR B(1):01100110;
	OR C(1):00101010;
	OR D(1):00101011;
	XOR A(1):00101100;
	XOR B(1):00101101;
	XOR C(1):00101110;
	XOR D(1):00101111;
	NOT A(1):00110000;
	NOT B(1):00110001;
	NOT C(1):00110010;
	NOT D(1):00110011;
	INC A(1):00110100;
	INC B(1):00110101;
	INC C(1):00110110;
	INC D(1):00110111;
	DEC A(1):00111000;
	DEC B(1):00111001;
	DEC C(1):00111010;
	DEC D(1):00111011;
	CMP EQ(1):00111100;

	JMP(3):00111111;
	JMPC Z(3):01000000;
	JMPC NZ(3):01000001;
	JMPC C(3):01000010;
	JMPC NC(3):01000011;
	JMPC CMP(3):01000100;
	JMPC NCMP(3):01000101;

	# Unused opcode: 01000110;
	CALL(3):01000111;
	RET(1):01001000;
	IN A(1):01001001;
	IN B(1):01001010;
	IN C(1):01001011;
	IN D(1):01001100;
	OUT 1 A(1):01001101;
	OUT 1 B(1):01001110;
	OUT 1 C(1):01001111;
	OUT 1 D(1):01010000;
	OUT 2 A(1):01010001;
	OUT 2 B(1):01010010;
	OUT 2 C(1):01010011;
	OUT 2 D(1):01010100;
	MOV AX A(1):01010101;
	MOV AX B(1):01010110;
	MOV AX C(1):01010111;
	MOV AX D(1):01011000;
	MOV AY A(1):01011001;
	MOV AY B(1):01011010;
	MOV AY C(1):01011011;
	MOV AY D(1):01011100;
	MVI AX(2):00111101;
	MVI AY(2):00111110;
	SHL A(1):00010100;
	SHL B(1):00010101;
	SHL C(1):00011000;
	SHL D(1):00011001;
	SHR A(1):01011101;
	SHR B(1):01011110;
	SHR C(1):01011111;
	SHR D(1):01100111;
	SC 0(1):01101000;
	SC 1(1):01101001;
	LD AX(3):01101010;
	LD AY(3):01101011;
	# Unused opcode: 01101100;
	LDR A(1):01101101;
	LDR B(1):01101110;
	STR A(1):01101111;
	STR B(1):01110000;
	LD C(3):01110001;
	LD D(3):01110010;
	LDR C(1):01110101;
	LDR D(1):01110110;
	LDZ A(2):01110111;
	LDZ B(2):01111000;
	LDZ AX(2):01110011;
	LDZ D(2):01110100;
	STZ A(2):01100000;
	STZ B(2):01111001;
	LDRZ A(1):01111010;
	LDRZ B(1):01111011;
	LDRZ AX(1):01111100;
	LDRZ D(1):01111101;
	STRZ A(1):01111110;
	STRZ B(1):01111111;

	LDZ C(2):10000000;
	LDZ AY(2):10000001;
	LDR AX(1):10000010;
	LDR AY(1):10000011;
	LDRZ C(1):10000100;
	LDRZ AY(1):10000101;

	CALLC Z(3):10000110;
	CALLC NZ(3):10000111;
	CALLC C(3):10001000;
	CALLC NC(3):10001001;
	CALLC CMP(3):10001010;
	CALLC NCMP(3):10001011;

	RETC Z(1):10001100;
	RETC NZ(1):10001101;
	RETC C(1):10001110;
	RETC NC(1):10001111;
	RETC CMP(1):10010000;
	RETC NCMP(1):10010001;

	CMP LT(1):10010010;
	CMP GT(1):10010011;
}

CONTROLLINES
{
	NC;				NC;			MAR_ZP;		FLAGS_Fc_set;	FLAGS_Fc_clear;	FLAGS_Fc_load;	FLAGS_Flt_load;	FLAGS_Feq_load;
	FLAGS_Fgt_load;	OUT2_load;	OUT1_load;	IN_out;			TSTATE_reset;	CLOCK_halt;		MEM_out;		MEM_RAM_load;
	MAR_STK_load;	MAR_PC_load;MAR_HB_load;MAR_LB_load;	ALU_out;		ALU_shr;		ALU_m;			ALU_s3;
	ALU_s2;			ALU_s1;		ALU_s0;		AY_load;		AX_load;		STK_reset;		STK_dec;		STK_inc;
	PC_HB_out;		PC_LB_out;	PC_HB_load;	PC_LB_load;		PC_dec;			PC_inc;			IR_load;		FLAGS_Fz_load;
	D_load;			D_out;		C_load;		C_out;			B_load;			B_out;			A_load;			A_out;
}

MICROCODE
{
	NOP {
		0 { TSTATE_reset }
	}

	HALT {
		0 { CLOCK_halt }
	}

	MOV (r1) (r2) {
		0 { (r2)_out;(r1)_load }
		1 { TSTATE_reset }
	}

	MVI (r1) {
		0 { MAR_PC_load	}
		1 { MEM_out;(r1)_load;PC_inc }
		2 { TSTATE_reset }
	}

	LD (r1) {
		0 { MAR_PC_load }
		1 { MEM_out;D_load;PC_inc }
		2 { MAR_PC_load	}
		3 { MEM_out;C_load;PC_inc }
		4 { C_out;MAR_LB_load }
		5 { D_out;MAR_HB_load }
		6 { MEM_out;(r1)_load }
		7 { TSTATE_reset }
	}

	ST (r1) {
		0 { MAR_PC_load }
		1 { MEM_out;D_load;PC_inc }
		2 { MAR_PC_load }
		3 { MEM_out;C_load;PC_inc }
		4 { C_out;MAR_LB_load }
		5 { D_out;MAR_HB_load }
		6 { (r1)_out;MEM_RAM_load }
		7 { TSTATE_reset }
	}

	LDR (r1) {
		0 { C_out;MAR_LB_load }
		1 { D_out;MAR_HB_load }
		2 { MEM_out;(r1)_load }
		3 { TSTATE_reset }
	}

	STR (r1) {
		0 { C_out;MAR_LB_load }
		1 { D_out;MAR_HB_load }
		2 { (r1)_out;MEM_RAM_load }
		3 { TSTATE_reset }
	}

	LDZ (r1) {
		0 { MAR_PC_load	}
		1 { MEM_out;C_load;PC_inc }
		2 { C_out;MAR_LB_load;MAR_ZP }
		3 { MEM_out;(r1)_load }
		4 { TSTATE_reset }
	}

	STZ (r1) {
		0 { MAR_PC_load }
		1 { MEM_out;C_load;PC_inc }
		2 { C_out;MAR_LB_load;MAR_ZP }
		3 { (r1)_out;MEM_RAM_load }
		4 { TSTATE_reset }
	}

	LDRZ (r1) {
		0 { C_out;MAR_LB_load;MAR_ZP }
		1 { MEM_out;(r1)_load }
		2 { TSTATE_reset }
	}

	STRZ (r1) {
		0 { C_out;MAR_LB_load;MAR_ZP }
		1 { (r1)_out;MEM_RAM_load }
		2 { TSTATE_reset }
	}

	ADD (r1) {
		0 { FLAGS_Fc_clear }
		1 { ALU_s0;ALU_s3;ALU_out;(r1)_load;FLAGS_Fc_load;FLAGS_Fz_load }
		2 { TSTATE_reset }
	}

	ADC (r1) {
		0 { ALU_s0;ALU_s3;ALU_out;(r1)_load }
		1 { ALU_s0;ALU_s3;FLAGS_Fc_load;FLAGS_Fz_load }
		2 { TSTATE_reset }
	}

	SUB (r1) {
		0 { FLAGS_Fc_set }
		1 { ALU_s1;ALU_s2;ALU_out;(r1)_load;FLAGS_Fc_load;FLAGS_Fz_load }
		2 { TSTATE_reset }
	}

	SBC (r1) {
		0 { ALU_s1;ALU_s2;ALU_out;(r1)_load }
		1 { ALU_s1;ALU_s2;ALU_out;FLAGS_Fc_load;FLAGS_Fz_load }
		2 { TSTATE_reset }
	}

	AND (r1) {
		0 { ALU_s0;ALU_s1;ALU_s3;ALU_m;ALU_out;(r1)_load }
		1 { TSTATE_reset }
	}

	OR (r1) {
		0 { FLAGS_Fc_clear;ALU_s0;ALU_out;(r1)_load }
		1 { TSTATE_reset }
	}

	XOR (r1) {
		0 { FLAGS_Fc_clear;ALU_s1;ALU_s2;ALU_m;ALU_out;(r1)_load }
		1 { TSTATE_reset }
	}

	INC (r1) {
		0 { FLAGS_Fc_set }
		1 { ALU_out;(r1)_load;FLAGS_Fc_load;FLAGS_Fz_load }
		2 { TSTATE_reset }
	}

	DEC (r1) {
		0 { FLAGS_Fc_clear;ALU_s0;ALU_s1;ALU_s2;ALU_s3;ALU_out;(r1)_load;FLAGS_Fc_load;FLAGS_Fz_load }
		1 { TSTATE_reset }
	}

	SHL (r1) {
		0 { FLAGS_Fc_clear;ALU_s2;ALU_s3;ALU_out;(r1)_load }
		1 { TSTATE_reset }
	}

	SHR (r1) {
		0 { ALU_shr;(r1)_load;FLAGS_Fc_load;FLAGS_Fz_load }
		1 { TSTATE_reset }
	}

	NOT (r1) {
		0 { ALU_m;ALU_out;(r1)_load }
		1 { TSTATE_reset }
	}

	SC 0 {
		0 { FLAGS_Fc_clear }
		1 { TSTATE_reset }
	}

	SC 1 {
		0 { FLAGS_Fc_set }
		1 { TSTATE_reset }
	}

	CALL {
		0 { PC_inc }
		1 { PC_inc }
		2 { PC_LB_out;C_load }
		3 { PC_HB_out;D_load }
		4 { MAR_STK_load;D_out;MEM_RAM_load;STK_inc;PC_dec }
		5 { MAR_STK_load }
		6 { C_out;MEM_RAM_load;STK_inc;PC_dec }
		7 { MAR_PC_load }
		8 { MEM_out;D_load;PC_inc }
		9 { MAR_PC_load }
		10 { MEM_out;C_load;PC_inc }
		11 { D_out;PC_HB_load }
		12 { C_out;PC_LB_load }
	}

	CALLC Z {
		0 { PC_inc }
		1 { PC_inc }
		2 { 
			[x0x] TSTATE_reset
			[x1x] PC_LB_out;C_load	
		}
		3 { PC_HB_out;D_load }
		4 { MAR_STK_load;D_out;MEM_RAM_load;STK_inc;PC_dec }
		5 { MAR_STK_load }
		6 { C_out;MEM_RAM_load;STK_inc;PC_dec }
		7 { MAR_PC_load }
		8 { MEM_out;D_load;PC_inc }
		9 { MAR_PC_load }
		10 { MEM_out;C_load;PC_inc }
		11 { D_out;PC_HB_load }
		12 { C_out;PC_LB_load }
	}

	CALLC NZ {
		0 { PC_inc }
		1 { PC_inc }
		2 { 
			[x1x] TSTATE_reset
			[x0x] PC_LB_out;C_load	
		}
		3 { PC_HB_out;D_load }
		4 { MAR_STK_load;D_out;MEM_RAM_load;STK_inc;PC_dec }
		5 { MAR_STK_load }
		6 { C_out;MEM_RAM_load;STK_inc;PC_dec }
		7 { MAR_PC_load }
		8 { MEM_out;D_load;PC_inc }
		9 { MAR_PC_load }
		10 { MEM_out;C_load;PC_inc }
		11 { D_out;PC_HB_load }
		12 { C_out;PC_LB_load }
	}

	CALLC C {
		0 { PC_inc }
		1 { PC_inc }
		2 { 
			[xx0] TSTATE_reset
			[xx1] PC_LB_out;C_load	
		}
		3 { PC_HB_out;D_load }
		4 { MAR_STK_load;D_out;MEM_RAM_load;STK_inc;PC_dec }
		5 { MAR_STK_load }
		6 { C_out;MEM_RAM_load;STK_inc;PC_dec }
		7 { MAR_PC_load }
		8 { MEM_out;D_load;PC_inc }
		9 { MAR_PC_load }
		10 { MEM_out;C_load;PC_inc }
		11 { D_out;PC_HB_load }
		12 { C_out;PC_LB_load }
	}

	CALLC NC {
		0 { PC_inc }
		1 { PC_inc }
		2 { 
			[xx1] TSTATE_reset
			[xx0] PC_LB_out;C_load	
		}
		3 { PC_HB_out;D_load }
		4 { MAR_STK_load;D_out;MEM_RAM_load;STK_inc;PC_dec }
		5 { MAR_STK_load }
		6 { C_out;MEM_RAM_load;STK_inc;PC_dec }
		7 { MAR_PC_load }
		8 { MEM_out;D_load;PC_inc }
		9 { MAR_PC_load }
		10 { MEM_out;C_load;PC_inc }
		11 { D_out;PC_HB_load }
		12 { C_out;PC_LB_load }
	}

	CALLC CMP {
		0 { PC_inc }
		1 { PC_inc }
		2 { 
			[0xx] TSTATE_reset
			[1xx] PC_LB_out;C_load	
		}
		3 { PC_HB_out;D_load }
		4 { MAR_STK_load;D_out;MEM_RAM_load;STK_inc;PC_dec }
		5 { MAR_STK_load }
		6 { C_out;MEM_RAM_load;STK_inc;PC_dec }
		7 { MAR_PC_load }
		8 { MEM_out;D_load;PC_inc }
		9 { MAR_PC_load }
		10 { MEM_out;C_load;PC_inc }
		11 { D_out;PC_HB_load }
		12 { C_out;PC_LB_load }
	}

	CALLC NCMP {
		0 { PC_inc }
		1 { PC_inc }
		2 { 
			[1xx] TSTATE_reset
			[0xx] PC_LB_out;C_load	
		}
		3 { PC_HB_out;D_load }
		4 { MAR_STK_load;D_out;MEM_RAM_load;STK_inc;PC_dec }
		5 { MAR_STK_load }
		6 { C_out;MEM_RAM_load;STK_inc;PC_dec }
		7 { MAR_PC_load }
		8 { MEM_out;D_load;PC_inc }
		9 { MAR_PC_load }
		10 { MEM_out;C_load;PC_inc }
		11 { D_out;PC_HB_load }
		12 { C_out;PC_LB_load }
	}

	RET {
		0 { STK_dec }
		1 { MAR_STK_load }
		2 { MEM_out;C_load;STK_dec }
		3 { MAR_STK_load }
		4 { MEM_out;D_load }
		5 { C_out;PC_LB_load }
		6 { D_out;PC_HB_load }
		7 { TSTATE_reset }
	}

	RETC Z {
		0 { 
			[x0x] TSTATE_reset
			[x1x] STK_dec 
		}
		1 { MAR_STK_load }
		2 { MEM_out;C_load;STK_dec }
		3 { MAR_STK_load }
		4 { MEM_out;D_load }
		5 { C_out;PC_LB_load }
		6 { D_out;PC_HB_load }
		7 { TSTATE_reset }
	}

	RETC NZ {
		0 { 
			[x1x] TSTATE_reset
			[x0x] STK_dec 
		}
		1 { MAR_STK_load }
		2 { MEM_out;C_load;STK_dec }
		3 { MAR_STK_load }
		4 { MEM_out;D_load }
		5 { C_out;PC_LB_load }
		6 { D_out;PC_HB_load }
		7 { TSTATE_reset }
	}

	RETC C {
		0 { 
			[xx0] TSTATE_reset
			[xx1] STK_dec 
		}
		1 { MAR_STK_load }
		2 { MEM_out;C_load;STK_dec }
		3 { MAR_STK_load }
		4 { MEM_out;D_load }
		5 { C_out;PC_LB_load }
		6 { D_out;PC_HB_load }
		7 { TSTATE_reset }
	}

	RETC NC {
		0 { 
			[xx1] TSTATE_reset
			[xx0] STK_dec 
		}
		1 { MAR_STK_load }
		2 { MEM_out;C_load;STK_dec }
		3 { MAR_STK_load }
		4 { MEM_out;D_load }
		5 { C_out;PC_LB_load }
		6 { D_out;PC_HB_load }
		7 { TSTATE_reset }
	}

	RETC CMP {
		0 { 
			[0xx] TSTATE_reset
			[1xx] STK_dec 
		}
		1 { MAR_STK_load }
		2 { MEM_out;C_load;STK_dec }
		3 { MAR_STK_load }
		4 { MEM_out;D_load }
		5 { C_out;PC_LB_load }
		6 { D_out;PC_HB_load }
		7 { TSTATE_reset }
	}

	RETC NCMP {
		0 { 
			[1xx] TSTATE_reset
			[0xx] STK_dec 
		}
		1 { MAR_STK_load }
		2 { MEM_out;C_load;STK_dec }
		3 { MAR_STK_load }
		4 { MEM_out;D_load }
		5 { C_out;PC_LB_load }
		6 { D_out;PC_HB_load }
		7 { TSTATE_reset }
	}

	JMP {
		0 { MAR_PC_load }
		1 { MEM_out;D_load;PC_inc }
		2 { MAR_PC_load }
		3 { MEM_out;C_load }
		4 { C_out;PC_LB_load }
		5 { D_out;PC_HB_load }
		6 { TSTATE_reset }
	}

	JMPC Z {
		0 {
			[x0x] PC_inc
			[x1x] MAR_PC_load
		}
		1 { 
			[x0x] PC_inc
			[x1x] MEM_out;D_load;PC_inc 
		}
		2 { 
			[x0x] TSTATE_reset
			[x1x] MAR_PC_load	
		}
		3 { MEM_out;C_load;PC_inc }
		4 { C_out;PC_LB_load }
		5 { D_out;PC_HB_load }
		6 { TSTATE_reset }
	}

	JMPC NZ {
		0 {
			[x1x] PC_inc
			[x0x] MAR_PC_load
		}
		1 { 
			[x1x] PC_inc
			[x0x] MEM_out;D_load;PC_inc 
		}
		2 { 
			[x1x] TSTATE_reset
			[x0x] MAR_PC_load	
		}
		3 { MEM_out;C_load;PC_inc }
		4 { C_out;PC_LB_load }
		5 { D_out;PC_HB_load }
		6 { TSTATE_reset }
	}

	JMPC C {
		0 {
			[xx0] PC_inc
			[xx1] MAR_PC_load
		}
		1 { 
			[xx0] PC_inc
			[xx1] MEM_out;D_load;PC_inc 
		}
		2 { 
			[xx0] TSTATE_reset
			[xx1] MAR_PC_load	
		}
		3 { MEM_out;C_load;PC_inc }
		4 { C_out;PC_LB_load }
		5 { D_out;PC_HB_load }
		6 { TSTATE_reset }
	}

	JMPC NC {
		0 {
			[xx1] PC_inc
			[xx0] MAR_PC_load
		}
		1 { 
			[xx1] PC_inc
			[xx0] MEM_out;D_load;PC_inc 
		}
		2 { 
			[xx1] TSTATE_reset
			[xx0] MAR_PC_load	
		}
		3 { MEM_out;C_load;PC_inc }
		4 { C_out;PC_LB_load }
		5 { D_out;PC_HB_load }
		6 { TSTATE_reset }
	}

	JMPC CMP {
		0 {
			[0xx] PC_inc
			[1xx] MAR_PC_load
		}
		1 { 
			[0xx] PC_inc
			[1xx] MEM_out;D_load;PC_inc 
		}
		2 { 
			[0xx] TSTATE_reset
			[1xx] MAR_PC_load	
		}
		3 { MEM_out;C_load;PC_inc }
		4 { C_out;PC_LB_load }
		5 { D_out;PC_HB_load }
		6 { TSTATE_reset }
	}

	JMPC NCMP {
		0 {
			[1xx] PC_inc
			[0xx] MAR_PC_load
		}
		1 { 
			[1xx] PC_inc
			[0xx] MEM_out;D_load;PC_inc 
		}
		2 { 
			[1xx] TSTATE_reset
			[0xx] MAR_PC_load	
		}
		3 { MEM_out;C_load;PC_inc }
		4 { C_out;PC_LB_load }
		5 { D_out;PC_HB_load }
		6 { TSTATE_reset }
	}

	CMP EQ {
		0 { FLAGS_Fc_clear;ALU_s1;ALU_s2;FLAGS_Feq_load }
		1 { TSTATE_reset }
	}

	CMP LT {
		0 { FLAGS_Fc_set }
		1 { ALU_s1;ALU_s2;FLAGS_Flt_load }
		2 { TSTATE_reset }
	}

	CMP GT {
		0 { FLAGS_Fc_clear;ALU_s1;ALU_s2;FLAGS_Fgt_load }
		1 { TSTATE_reset }
	}

	OUT 1 (r1) {
		0 { (r1)_out;OUT1_load }
		1 { TSTATE_reset }
	}

	OUT 2 (r1) {
		0 { (r1)_out;OUT2_load }
		1 { TSTATE_reset }
	}
}
